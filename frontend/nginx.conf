server {
    listen 8080 default_server;
    listen [::]:8080 default_server;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security limits
    client_max_body_size 10M;
    client_body_timeout 60s;         # Increased for LLM request uploads
    client_header_timeout 60s;       # Increased for LLM request headers

    # Enhanced security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://accounts.google.com https://apis.google.com https://gstatic.com; worker-src 'self' blob:; style-src 'self' 'unsafe-inline' https://accounts.google.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://atlas-backend-blz2r3yjgq-uc.a.run.app https://*.googleapis.com https://accounts.google.com https://api.mapbox.com https://*.tiles.mapbox.com; frame-src https://accounts.google.com;" always;

    # API proxy with corrected path handling
    location /api/ {
        # Rate limiting would go here (requires nginx-plus or custom build)
        # limit_req zone=api burst=20 nodelay;
        
        # Forward the request with /api intact since FastAPI expects it
        proxy_pass https://atlas-backend-blz2r3yjgq-uc.a.run.app;
        
        # Essential proxy headers
        proxy_set_header Host atlas-backend-blz2r3yjgq-uc.a.run.app;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;      # 5 minutes for LLM responses
        proxy_read_timeout 300s;      # 5 minutes for LLM processing
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Hide backend errors from client
        proxy_intercept_errors on;
        
        # CORS headers (only add if not already added by backend)
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # Security: Block certain request patterns (but allow legitimate admin API)
        location ~ /api/.*(debug|config|env) {
            deny all;
            return 403;
        }
    }

    # Cache static assets with security headers
    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
    }

    # Favicon caching
    location /favicon.ico {
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
    }

    # Block access to hidden files
    location ~ /\. {
        deny all;
        return 404;
    }

    # Handle SPA routing (must come last)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers for HTML content
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
    }

    # Custom error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Error handling
    error_page 404 /index.html;
}