name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  DOCKER_IMAGE_PREFIX: atlas
  VERSION: ${{ github.sha }}

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create false

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Install dependencies
        run: |
          make install
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_IMAGE_PREFIX: ${{ env.DOCKER_IMAGE_PREFIX }}
          VERSION: ${{ env.VERSION }}

      - name: Build
        run: |
          make build
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_IMAGE_PREFIX: ${{ env.DOCKER_IMAGE_PREFIX }}
          VERSION: ${{ env.VERSION }}

      - name: Run tests
        run: |
          make test
        env:
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Check if GOOGLE_APPLICATION_CREDENTIALS is set
        run: |
          if [ -z "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" ]; then
            echo "Secret is NOT set";
            exit 1;
          else
            echo "Secret is set";
          fi
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create false
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          
      - name: Configure gsutil to use gcloud credentials
        run: |
          gcloud auth activate-service-account --key-file="${GOOGLE_APPLICATION_CREDENTIALS}"
          gcloud config set account "$(gcloud config get-value account)"

      - name: Print Google env vars
        run: env | grep GOOGLE || true

      - name: Set gcloud project
        run: gcloud config set project "$GOOGLE_CLOUD_PROJECT"

      - name: Validate gcloud project access
        run: |
          echo "Current gcloud project:"
          gcloud config get-value project
          echo "Listing projects visible to this account:"
          gcloud projects list || true
          echo "Trying to describe the configured project:"
          gcloud projects describe "$(gcloud config get-value project)" || true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Install all dependencies
        run: make install

      - name: Deploy Backend API
        run: |
          make deploy-api
        env:
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_IMAGE_PREFIX: ${{ env.DOCKER_IMAGE_PREFIX }}
          VERSION: ${{ env.VERSION }}
          STAGING_BUCKET: ${{ secrets.STAGING_BUCKET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          RAG_CORPUS: ${{ secrets.RAG_CORPUS }}
          ADMIN_EMAILS: ${{ secrets.ADMIN_EMAILS }}
          JUDGE_EMAILS: ${{ secrets.JUDGE_EMAILS }}
          GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          STATUS_TRACKER_TEMPLATE_ID: ${{ secrets.STATUS_TRACKER_TEMPLATE_ID }}
          GOOGLE_SLIDES_SERVICE_ACCOUNT_KEY_BASE64: ${{ secrets.GOOGLE_SLIDES_SERVICE_ACCOUNT_KEY_BASE64 }}
          GOOGLE_CUSTOM_SEARCH_API_KEY: ${{ secrets.GOOGLE_CUSTOM_SEARCH_API_KEY }}
          GOOGLE_CUSTOM_SEARCH_ENGINE_ID: ${{ secrets.GOOGLE_CUSTOM_SEARCH_ENGINE_ID }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          NYC_311_APP_TOKEN: ${{ secrets.NYC_311_APP_TOKEN }}

      - name: Deploy Frontend
        run: |
          make deploy-web
        env:
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_IMAGE_PREFIX: ${{ env.DOCKER_IMAGE_PREFIX }}
          VERSION: ${{ env.VERSION }}
          STAGING_BUCKET: ${{ secrets.STAGING_BUCKET }}

      - name: Deploy Monitor System
        run: |
          make deploy-monitor
        env:
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_IMAGE_PREFIX: ${{ env.DOCKER_IMAGE_PREFIX }}
          VERSION: ${{ env.VERSION }}
          STAGING_BUCKET: ${{ secrets.STAGING_BUCKET }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_REFRESH_TOKEN: ${{ secrets.REDDIT_REFRESH_TOKEN }}
          TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
          TWITTER_API_KEY_SECRET: ${{ secrets.TWITTER_API_KEY_SECRET }}
          TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}